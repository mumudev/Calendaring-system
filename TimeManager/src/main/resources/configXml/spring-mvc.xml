<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/mvc 
       http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
       ">

	<!-- 使用annotation来配置controller和view的映射 ，会搜索base-package的路径的controller -->
	<!-- <context:component-scan base-package="com.cptgroup.controller,com.cptgroup.controllerAdmin" 
		/> -->
	<!--启动Spring MVC注解 -->
	<mvc:annotation-driven />
	<context:component-scan	base-package="com.mumudev.controller,com.mumudev.controllerImpl" />
	
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 对模型controller到视图view 名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />

 

	<!-- 配置文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>



	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
<!-- 		<mvc:interceptor>
			匹配的是url路径， 如果不配置或/**,将拦截所有的Controller
			<mvc:mapping path="/" />
			<mvc:mapping path="/demo.do" />
			<bean class="harbor.interceptor.LoginCheckInterceptor">
			<property name="service" ref="demoInterService"/>
			</bean>
		</mvc:interceptor>
 -->
	</mvc:interceptors>


</beans>
